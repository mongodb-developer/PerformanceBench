/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.mongodb:mongodb-driver-sync:4.7.1'
    //implementation 'org.slf4j:slf4j-api:1.7.6'
    //implementation 'org.slf4j:jul-to-slf4j:1.7.25'
    implementation 'ch.qos.logback:logback-classic:1.2.6'
    implementation 'commons-cli:commons-cli:1.3'
    implementation 'com.googlecode.json-simple:json-simple:1.1'
    implementation 'org.apache.ibatis:ibatis-core:3.0'
    runtimeOnly 'org.postgresql:postgresql:42.4.1'
}

application {
    // Define the main class for the application.
    mainClass = 'com.mongodb.devrel.pods.performancebench.PerformanceBench'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('run') {
    if ( project.hasProperty("cmdArgs") ) {
        args Eval.me(cmdArgs)
    }
}
